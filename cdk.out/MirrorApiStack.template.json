{
 "Resources": {
  "RoleForMirrorLambda0E8CAE0E": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/RoleForMirrorLambda/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "RoleForMirrorLambdaDefaultPolicy171CFA0E": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:PutLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      },
      {
       "Action": [
        "bedrock:InvokeModel",
        "bedrock:InvokeModelWithResponseStream"
       ],
       "Effect": "Allow",
       "Resource": "arn:aws:bedrock:us-west-2::foundation-model/*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RoleForMirrorLambdaDefaultPolicy171CFA0E",
    "Roles": [
     {
      "Ref": "RoleForMirrorLambda0E8CAE0E"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/RoleForMirrorLambda/DefaultPolicy/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "AngelLambdaFunction982A21BD": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-942988625276-us-west-2",
     "S3Key": "f5dda51cf909bb78a190a35a553a4eb1ee076dcdf240c34d94eee4db81c3d203.zip"
    },
    "Handler": "index_angel.lambda_handler",
    "MemorySize": 2048,
    "Role": {
     "Fn::GetAtt": [
      "RoleForMirrorLambda0E8CAE0E",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 29
   },
   "DependsOn": [
    "RoleForMirrorLambdaDefaultPolicy171CFA0E",
    "RoleForMirrorLambda0E8CAE0E"
   ],
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/AngelLambdaFunction/Resource",
    "aws:asset:path": "asset.f5dda51cf909bb78a190a35a553a4eb1ee076dcdf240c34d94eee4db81c3d203",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "DevilLambdaFunctionE01C872F": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-942988625276-us-west-2",
     "S3Key": "f5dda51cf909bb78a190a35a553a4eb1ee076dcdf240c34d94eee4db81c3d203.zip"
    },
    "Handler": "index_devil.lambda_handler",
    "MemorySize": 2048,
    "Role": {
     "Fn::GetAtt": [
      "RoleForMirrorLambda0E8CAE0E",
      "Arn"
     ]
    },
    "Runtime": "python3.12",
    "Timeout": 29
   },
   "DependsOn": [
    "RoleForMirrorLambdaDefaultPolicy171CFA0E",
    "RoleForMirrorLambda0E8CAE0E"
   ],
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/DevilLambdaFunction/Resource",
    "aws:asset:path": "asset.f5dda51cf909bb78a190a35a553a4eb1ee076dcdf240c34d94eee4db81c3d203",
    "aws:asset:is-bundled": false,
    "aws:asset:property": "Code",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "RoleForApiGwInvokeDrawPublicA3A208FF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/RoleForApiGwInvokeDrawPublic/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "RoleForApiGwInvokeDrawPublicDefaultPolicyA0BF3757": {
   "Type": "AWS::IAM::Policy",
   "Properties": {
    "PolicyDocument": {
     "Statement": [
      {
       "Action": "lambda:InvokeFunction",
       "Effect": "Allow",
       "Resource": [
        {
         "Fn::GetAtt": [
          "AngelLambdaFunction982A21BD",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "AngelLambdaFunction982A21BD",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        },
        {
         "Fn::GetAtt": [
          "DevilLambdaFunctionE01C872F",
          "Arn"
         ]
        },
        {
         "Fn::Join": [
          "",
          [
           {
            "Fn::GetAtt": [
             "DevilLambdaFunctionE01C872F",
             "Arn"
            ]
           },
           ":*"
          ]
         ]
        }
       ]
      },
      {
       "Action": [
        "logs:CreateLogGroup",
        "logs:CreateLogStream",
        "logs:DescribeLogGroups",
        "logs:DescribeLogStreams",
        "logs:PutLogEvents",
        "logs:GetLogEvents",
        "logs:FilterLogEvents"
       ],
       "Effect": "Allow",
       "Resource": "*"
      }
     ],
     "Version": "2012-10-17"
    },
    "PolicyName": "RoleForApiGwInvokeDrawPublicDefaultPolicyA0BF3757",
    "Roles": [
     {
      "Ref": "RoleForApiGwInvokeDrawPublicA3A208FF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/RoleForApiGwInvokeDrawPublic/DefaultPolicy/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGateway06396EB2": {
   "Type": "AWS::ApiGateway::RestApi",
   "Properties": {
    "Name": "MirrorApi"
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayCloudWatchRoleFB054DF4": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "apigateway.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
       ]
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/CloudWatchRole/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayAccount20309DBE": {
   "Type": "AWS::ApiGateway::Account",
   "Properties": {
    "CloudWatchRoleArn": {
     "Fn::GetAtt": [
      "MirrorApiGatewayCloudWatchRoleFB054DF4",
      "Arn"
     ]
    }
   },
   "DependsOn": [
    "MirrorApiGateway06396EB2"
   ],
   "UpdateReplacePolicy": "Retain",
   "DeletionPolicy": "Retain",
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Account",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayDeploymentCE5892CB65139a80544098717cc61e11da7f2862": {
   "Type": "AWS::ApiGateway::Deployment",
   "Properties": {
    "Description": "Automatically created by the RestApi construct",
    "RestApiId": {
     "Ref": "MirrorApiGateway06396EB2"
    }
   },
   "DependsOn": [
    "MirrorApiGatewayangelOPTIONS1B9D35BD",
    "MirrorApiGatewayangelPOSTAAF9E9DF",
    "MirrorApiGatewayangel792791F6",
    "MirrorApiGatewaydevilOPTIONS7FE10738",
    "MirrorApiGatewaydevilPOST2A2D1656",
    "MirrorApiGatewaydevil3CDF0F7D"
   ],
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Deployment/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayDeploymentStageprodCB74E360": {
   "Type": "AWS::ApiGateway::Stage",
   "Properties": {
    "DeploymentId": {
     "Ref": "MirrorApiGatewayDeploymentCE5892CB65139a80544098717cc61e11da7f2862"
    },
    "RestApiId": {
     "Ref": "MirrorApiGateway06396EB2"
    },
    "StageName": "prod"
   },
   "DependsOn": [
    "MirrorApiGatewayAccount20309DBE"
   ],
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/DeploymentStage.prod/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayangel792791F6": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MirrorApiGateway06396EB2",
      "RootResourceId"
     ]
    },
    "PathPart": "angel",
    "RestApiId": {
     "Ref": "MirrorApiGateway06396EB2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/angel/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayangelPOSTApiPermissionMirrorApiStackMirrorApiGateway2F2FF906POSTangel57066D3E": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AngelLambdaFunction982A21BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-west-2:942988625276:",
       {
        "Ref": "MirrorApiGateway06396EB2"
       },
       "/",
       {
        "Ref": "MirrorApiGatewayDeploymentStageprodCB74E360"
       },
       "/POST/angel"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/angel/POST/ApiPermission.MirrorApiStackMirrorApiGateway2F2FF906.POST..angel",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayangelPOSTApiPermissionTestMirrorApiStackMirrorApiGateway2F2FF906POSTangelF66D2638": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "AngelLambdaFunction982A21BD",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-west-2:942988625276:",
       {
        "Ref": "MirrorApiGateway06396EB2"
       },
       "/test-invoke-stage/POST/angel"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/angel/POST/ApiPermission.Test.MirrorApiStackMirrorApiGateway2F2FF906.POST..angel",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayangelPOSTAAF9E9DF": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "Credentials": {
      "Fn::GetAtt": [
       "RoleForApiGwInvokeDrawPublicA3A208FF",
       "Arn"
      ]
     },
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "AngelLambdaFunction982A21BD",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "MirrorApiGatewayangel792791F6"
    },
    "RestApiId": {
     "Ref": "MirrorApiGateway06396EB2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/angel/POST/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewayangelOPTIONS1B9D35BD": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "MirrorApiGatewayangel792791F6"
    },
    "RestApiId": {
     "Ref": "MirrorApiGateway06396EB2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/angel/OPTIONS/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewaydevil3CDF0F7D": {
   "Type": "AWS::ApiGateway::Resource",
   "Properties": {
    "ParentId": {
     "Fn::GetAtt": [
      "MirrorApiGateway06396EB2",
      "RootResourceId"
     ]
    },
    "PathPart": "devil",
    "RestApiId": {
     "Ref": "MirrorApiGateway06396EB2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/devil/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewaydevilPOSTApiPermissionMirrorApiStackMirrorApiGateway2F2FF906POSTdevilBDA544B7": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DevilLambdaFunctionE01C872F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-west-2:942988625276:",
       {
        "Ref": "MirrorApiGateway06396EB2"
       },
       "/",
       {
        "Ref": "MirrorApiGatewayDeploymentStageprodCB74E360"
       },
       "/POST/devil"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/devil/POST/ApiPermission.MirrorApiStackMirrorApiGateway2F2FF906.POST..devil",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewaydevilPOSTApiPermissionTestMirrorApiStackMirrorApiGateway2F2FF906POSTdevil0A7EB0B1": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "DevilLambdaFunctionE01C872F",
      "Arn"
     ]
    },
    "Principal": "apigateway.amazonaws.com",
    "SourceArn": {
     "Fn::Join": [
      "",
      [
       "arn:",
       {
        "Ref": "AWS::Partition"
       },
       ":execute-api:us-west-2:942988625276:",
       {
        "Ref": "MirrorApiGateway06396EB2"
       },
       "/test-invoke-stage/POST/devil"
      ]
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/devil/POST/ApiPermission.Test.MirrorApiStackMirrorApiGateway2F2FF906.POST..devil",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewaydevilPOST2A2D1656": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "AuthorizationType": "NONE",
    "HttpMethod": "POST",
    "Integration": {
     "Credentials": {
      "Fn::GetAtt": [
       "RoleForApiGwInvokeDrawPublicA3A208FF",
       "Arn"
      ]
     },
     "IntegrationHttpMethod": "POST",
     "Type": "AWS_PROXY",
     "Uri": {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":apigateway:us-west-2:lambda:path/2015-03-31/functions/",
        {
         "Fn::GetAtt": [
          "DevilLambdaFunctionE01C872F",
          "Arn"
         ]
        },
        "/invocations"
       ]
      ]
     }
    },
    "ResourceId": {
     "Ref": "MirrorApiGatewaydevil3CDF0F7D"
    },
    "RestApiId": {
     "Ref": "MirrorApiGateway06396EB2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/devil/POST/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "MirrorApiGatewaydevilOPTIONS7FE10738": {
   "Type": "AWS::ApiGateway::Method",
   "Properties": {
    "ApiKeyRequired": false,
    "AuthorizationType": "NONE",
    "HttpMethod": "OPTIONS",
    "Integration": {
     "IntegrationResponses": [
      {
       "ResponseParameters": {
        "method.response.header.Access-Control-Allow-Headers": "'*'",
        "method.response.header.Access-Control-Allow-Origin": "'*'",
        "method.response.header.Access-Control-Allow-Methods": "'GET,POST,OPTIONS'"
       },
       "StatusCode": "204"
      }
     ],
     "RequestTemplates": {
      "application/json": "{ statusCode: 200 }"
     },
     "Type": "MOCK"
    },
    "MethodResponses": [
     {
      "ResponseParameters": {
       "method.response.header.Access-Control-Allow-Headers": true,
       "method.response.header.Access-Control-Allow-Origin": true,
       "method.response.header.Access-Control-Allow-Methods": true
      },
      "StatusCode": "204"
     }
    ],
    "ResourceId": {
     "Ref": "MirrorApiGatewaydevil3CDF0F7D"
    },
    "RestApiId": {
     "Ref": "MirrorApiGateway06396EB2"
    }
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/MirrorApiGateway/Default/devil/OPTIONS/Resource",
    "cdk_nag": {
     "rules_to_suppress": [
      {
       "reason": "allow lambda to call all FM models in bedrock",
       "id": "AwsSolutions-IAM5"
      },
      {
       "reason": "allow to run lambda runtime python 3.11",
       "id": "AwsSolutions-L1"
      },
      {
       "reason": "allow to use managed policy for some",
       "id": "AwsSolutions-IAM4"
      },
      {
       "reason": "skip api gw loggings",
       "id": "AwsSolutions-APIG1"
      },
      {
       "reason": "allow api gateway logs",
       "id": "AwsSolutions-APIG2"
      },
      {
       "reason": "skip api gateway logs",
       "id": "AwsSolutions-APIG6"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-APIG4"
      },
      {
       "reason": "allow public api wo auth",
       "id": "AwsSolutions-COG4"
      }
     ]
    }
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/02OTW6DQAyFz5L94EIiRdmSVt1VjcgBImdwqQPMIOwpQoi7VwOtwup9zz/P3kOWnSDd4SCJLeuk4TtMV0VbGxzkNjG2MBW+IfP65Ra9+IbtGO1Ks2mwvZcI03twVtm72NvyhfqWRdi72cjhhiKkAnkUIwc4B1uTnlHIYMcVKg04wlSQaN7xcveJubU+ODVv1DV+bMlprG7cVbFanl2hIPGht7TE/5u/zJU/SL99GUsrzfNzbvkxBrGr4sRn0C7odn02zpcED3n52aeQHSHdPYQ56YNTbgmKVX8BH0Xkk2cBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "MirrorApiStack/CDKMetadata/Default"
   }
  }
 },
 "Outputs": {
  "MirrorApiGatewayEndpoint655917F6": {
   "Value": {
    "Fn::Join": [
     "",
     [
      "https://",
      {
       "Ref": "MirrorApiGateway06396EB2"
      },
      ".execute-api.us-west-2.",
      {
       "Ref": "AWS::URLSuffix"
      },
      "/",
      {
       "Ref": "MirrorApiGatewayDeploymentStageprodCB74E360"
      },
      "/"
     ]
    ]
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}